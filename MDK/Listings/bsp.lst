C51 COMPILER V9.60.0.0   BSP                                                               11/29/2022 09:15:39 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE BSP
OBJECT MODULE PLACED IN .\Objects\bsp.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\BSP\bsp.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\BSP;..\BSP\bsp_key;..\US
                    -ER;..\BSP\bsp_lcd1602;..\middleware;..\middleware\EventHandler;..\BSP\DS1302;..\USER\timer) DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\bsp.lst) OBJECT(.\Objects\bsp.obj)

line level    source

   1          /*
   2           * @Author: liubotao
   3           * @Date: 2022-11-18 00:32:28
   4           * @LastEditors: liubotao
   5           * @LastEditTime: 2022-11-29 09:15:19
   6           * @FilePath: \test_51\BSP\bsp.c
   7           * @Description: 中断和驱动初始化
   8           *
   9           */
  10          #include "bsp.h"
  11          //#include "fifo.h"
  12          #include "EventHandler.h"
  13          static void task10ms();
  14          static void task5ms();
  15          void mainSetClock(TIMER_T * t);
  16          void mainShowClock(TIMER_T * t);//显示正在设置的时间
  17          void mainRefreshClock(TIMER_T * t);//显示时钟芯片的时间
  18          
  19          void dataPros(uint8_t *buf_s,uint8_t *buf_d);
  20          //extern  FIFO f_K;
  21          extern uint8_t KeyVal;        //全局函数，独立键值
  22          EVEN_T  myevent;
  23          TIMER_T  timer=
  24          {
  25                  0,
  26                  0,
  27                  0,
  28                  {0, 0x30, 0x16, 0x31, 0x10, 0x06, 0x22},
  29                  mainSetClock,
  30                  mainShowClock,
  31                  mainRefreshClock,
  32                  ds1302ReadTime,
  33                  ds1302Init,
  34                  initLcd1602,
  35                  LcdShowStr,
  36          };
  37          
  38          uint8_t KEY_1_DownMessage()
  39          {
  40   1              static uint8_t KeyValue_1;
  41   1              if (KeyVal == KEY_1_DOWN)
  42   1              {
  43   2                      KeyValue_1=eNABLE;
  44   2                      KeyVal = KEY_1_UP;
  45   2              }
  46   1      
  47   1              if (KeyVal == KEY_1_UP&&KeyValue_1==eNABLE)
  48   1              {
  49   2                      KeyValue_1=dISABLE;
  50   2                      return eNABLE;  
  51   2              }       
  52   1              else
  53   1                      return dISABLE;
C51 COMPILER V9.60.0.0   BSP                                                               11/29/2022 09:15:39 PAGE 2   

  54   1      
  55   1      }
  56          uint8_t KEY_1_LongMessage()
  57          {
  58   1              static uint8_t KeyValue_2;
  59   1              if (KeyVal == KEY_1_LONG)
  60   1              {
  61   2                      KeyValue_2=eNABLE;
  62   2                      KeyVal = KEY_1_UP;
  63   2              }
  64   1              if (KeyVal == KEY_1_UP && KeyValue_2 == eNABLE)
  65   1              {
  66   2                      KeyValue_2 = dISABLE;
  67   2                      return eNABLE;
  68   2              }
  69   1              else
  70   1                      return dISABLE;
  71   1      }
  72          
  73          
  74          
  75          // uint8_t KEY_1_DownMessage()
  76          // {
  77          //      static uint8_t KeyValue_1;
  78          //      if (KeyVal == KEY_1_DOWN)
  79          //      {
  80          //              return eNABLE;  
  81          //      }
  82          
  83          //      else
  84          //              return dISABLE;
  85          
  86          // }
  87          // uint8_t KEY_1_LongMessage()
  88          // {
  89          //      static uint8_t KeyValue_2;
  90          //      if (KeyVal == KEY_1_LONG)
  91          //      {
  92          //              return eNABLE;  
  93          //      }
  94          //      else
  95          //              return dISABLE;
  96          // }
  97          
  98          
  99          
 100          
 101          uint8_t timeadd(void)
 102          {
 103   1              addIncident(&timer);
 104   1              return 0;
 105   1      }
 106          uint8_t timeNumber=0;
 107          
 108          uint8_t timeSwitch(void)
 109          {
 110   1              if (timeNumber > 0)
 111   1              {
 112   2              switchIncident(&timer);
 113   2                      
 114   2              }
 115   1          else modeIncident(&timer);
C51 COMPILER V9.60.0.0   BSP                                                               11/29/2022 09:15:39 PAGE 3   

 116   1              timeNumber++;   
 117   1              if (timeNumber > 6)
 118   1              {
 119   2              modeIncident(&timer);
 120   2                      timeNumber = 0;
 121   2              }
 122   1      
 123   1      }
*** WARNING C173 IN LINE 123 OF ..\BSP\bsp.c: missing return-expression
 124          
 125          void bspInit()              //硬件初始化
 126          {
 127   1          timer.setClock(&timer);
 128   1      
 129   1          bsp_InitKeyVar();       //按键初始化
 130   1          initLcd1602();          //lcd初始化
 131   1          EnevHancleInit(&myevent);
 132   1          evenConnector(&myevent,
 133   1                    KEY_1_LongMessage,
 134   1                    timeSwitch,
 135   1                    0);
 136   1          evenConnector(&myevent,
 137   1                    KEY_1_DownMessage,
 138   1                    timeadd,
 139   1                    1);
 140   1              Timer1Init();
 141   1         // timer0Init();           //中断初始化
 142   1      }
 143          void timer1Init()           //1ms中断初始化
 144          {
 145   1          TMOD |= 0X10;
 146   1      
 147   1          TH1 = 0XD8; 
 148   1          TL1 = 0XF0;
 149   1          ET1 = 1;
 150   1          EA = 1;
 151   1          TR1 = 1;
 152   1      }
 153          //void Timer0Init(void)         //50毫秒@12.000MHz
 154          //{
 155          //      TMOD |= 0X01;
 156          //      TL0 = 0xB0;             //设置定时初值
 157          //      TH0 = 0x3C;             //设置定时初值
 158          //      TF0 = 0;                //清除TF1标志
 159          //      TR0 = 1;                //定时器1开始计时
 160          //}
 161          
 162          
 163          static void task10ms()      //10ms任务
 164          {
 165   1          bsp_KeyScan();
 166   1          //bsp_DetectKey(0);
 167   1          evenTrigger(&myevent);
 168   1      }
 169          
 170          static void task5ms() // 5ms任务
 171          {
 172   1              showIncident(&timer);
 173   1      }
 174          
 175          
 176          //void Timer0() interrupt 1   //中断服务函数
C51 COMPILER V9.60.0.0   BSP                                                               11/29/2022 09:15:39 PAGE 4   

 177          //{
 178          //    
 179          //      static char time_num100;    //中断次数，一次10ms
 180          
 181          //    TL0 = 0xB0;
 182          //      TH0 = 0x3C;
 183          //      time_num100++;
 184          //     if (time_num100 == 2)     // 10ms
 185          //     {
 186          //        time_num100 = 0;
 187          //         
 188          //              showIncident(&timer);
 189          
 190          
 191          //     }
 192          
 193          //}
 194          
 195          
 196          void Timer1() interrupt 3   //中断服务函数
 197          {
 198   1              static char time_num20; //中断次数，一次10ms
 199   1              static char time_num10; //中断次数，一次10ms
 200   1      
 201   1              TH1 = 0XD8;
 202   1              TL1 = 0XF0;
 203   1              time_num20++;
 204   1              time_num10++;
 205   1              if (time_num20 == 10) // 10ms
 206   1              {
 207   2                      time_num20 = 0;
 208   2                      task5ms();
 209   2              }
 210   1              if (time_num10 == 1) // 10ms
 211   1              {
 212   2                      time_num10 = 0;
 213   2                      task10ms();
 214   2              }
 215   1      }
 216          
 217          
 218          void mainSetClock(TIMER_T * t)
 219          {
 220   1      
 221   1              ds1302Init(t->timeBuffer);
 222   1      }
 223          
 224          void mainShowClock(TIMER_T * t)//显示正在设置的时间
 225          {
 226   1      
 227   1               unsigned  char buf_s[10]={0};
 228   1               unsigned  char buf_d[10]={0};
 229   1      
 230   1              buf_s[0] = (t->timeBuffer[2]/16)+0x30;                          
 231   1              buf_s[1] = (t->timeBuffer[2]&0x0f)+0x30;                                 
 232   1              buf_s[2] = '-';
 233   1              buf_s[3] = (t->timeBuffer[1]/16)+0x30;                          
 234   1              buf_s[4] = (t->timeBuffer[1]&0x0f)+0x30;        
 235   1              buf_s[5] = '-';
 236   1              buf_s[6] = (t->timeBuffer[0]/16)+0x30;                          
 237   1              buf_s[7] = (t->timeBuffer[0]&0x0f)+0x30;
 238   1      
C51 COMPILER V9.60.0.0   BSP                                                               11/29/2022 09:15:39 PAGE 5   

 239   1              buf_d[0] = (t->timeBuffer[6] / 16) + 0x30; 
 240   1              buf_d[1] = (t->timeBuffer[6] & 0x0f) + 0x30;
 241   1              buf_d[2] = '-';
 242   1              buf_d[3] = (t->timeBuffer[4] / 16) + 0x30; 
 243   1              buf_d[4] = (t->timeBuffer[4] & 0x0f) + 0x30;
 244   1              buf_d[5] = '-';
 245   1              buf_d[6] = (t->timeBuffer[3] / 16) + 0x30; 
 246   1              buf_d[7] = (t->timeBuffer[3] & 0x0f) + 0x30;
 247   1              LcdShowStr(0,0,buf_s); 
 248   1              LcdShowStr(0,1,buf_d); 
 249   1              
 250   1      }
 251          
 252          void mainRefreshClock(TIMER_T * t)//显示时钟芯片的时间
 253          {
 254   1               unsigned  char buffer_1[9]={0};
 255   1               unsigned  char buffer_2[13]={0};
 256   1              
 257   1              dataPros(buffer_1,buffer_2);
 258   1      
 259   1              LcdShowStr(0,0,buffer_1); 
 260   1              LcdShowStr(0,1,buffer_2);   
 261   1      
 262   1      }
*** WARNING C280 IN LINE 252 OF ..\BSP\bsp.c: 't': unreferenced local variable
 263          
 264          void dataPros(uint8_t *buf_s,uint8_t *buf_d)//读取时间并且转换为10进制
 265          {
 266   1              uint8_t datas[8];
 267   1              ds1302ReadTime(datas);
 268   1              buf_s[0] = (datas[2]/16)+0x30;                          //时
 269   1              buf_s[1] = (datas[2]&0x0f)+0x30;                                 
 270   1              buf_s[2] = '-';
 271   1              buf_s[3] = (datas[1]/16)+0x30;                          //分
 272   1              buf_s[4] = (datas[1]&0x0f)+0x30;        
 273   1              buf_s[5] = '-';
 274   1              buf_s[6] = (datas[0]/16)+0x30;                          //秒
 275   1              buf_s[7] = (datas[0]&0x0f)+0x30;
 276   1      
 277   1              buf_d[0] = (datas[6] / 16) + 0x30; //日
 278   1              buf_d[1] = (datas[6] & 0x0f) + 0x30;
 279   1              buf_d[2] = '-';
 280   1              buf_d[3] = (datas[4] / 16) + 0x30; //月
 281   1              buf_d[4] = (datas[4] & 0x0f) + 0x30;
 282   1              buf_d[5] = '-';
 283   1              buf_d[6] = (datas[3] / 16) + 0x30; //年
 284   1              buf_d[7] = (datas[3] & 0x0f) + 0x30;
 285   1      }
*** WARNING C290 IN LINE 123 OF ..\BSP\bsp.c: missing return value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    883    ----
   CONSTANT SIZE    =     42    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     51      62
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
