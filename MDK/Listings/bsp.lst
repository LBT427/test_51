C51 COMPILER V9.60.0.0   BSP                                                               11/29/2022 09:22:50 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE BSP
OBJECT MODULE PLACED IN .\Objects\bsp.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\BSP\bsp.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\BSP;..\BSP\bsp_key;..\US
                    -ER;..\BSP\bsp_lcd1602;..\middleware;..\middleware\EventHandler;..\BSP\DS1302;..\USER\timer) DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\bsp.lst) OBJECT(.\Objects\bsp.obj)

line level    source

   1          /*
   2           * @Author: liubotao
   3           * @Date: 2022-11-18 00:32:28
   4           * @LastEditors: liubotao
   5           * @LastEditTime: 2022-11-29 09:22:26
   6           * @FilePath: \test_51\BSP\bsp.c
   7           * @Description: 中断和驱动初始化
   8           *
   9           */
  10          #include "bsp.h"
  11          //#include "fifo.h"
  12          #include "EventHandler.h"
  13          static void task10ms();
  14          static void task500ms();
  15          void mainSetClock(TIMER_T * t);
  16          void mainShowClock(TIMER_T * t);//显示正在设置的时间
  17          void mainRefreshClock(TIMER_T * t);//显示时钟芯片的时间
  18          
  19          void dataPros(uint8_t *buf_s,uint8_t *buf_d);
  20          //extern  FIFO f_K;
  21          EVEN_T  myevent;
  22          TIMER_T  timer=
  23          {
  24                  0,
  25                  0,
  26                  0,
  27                  {0, 0x30, 0x16, 0x31, 0x10, 0x06, 0x22},
  28                  mainSetClock,
  29                  mainShowClock,
  30                  mainRefreshClock,
  31                  ds1302ReadTime,
  32                  ds1302Init,
  33                  initLcd1602,
  34                  LcdShowStr,
  35          };
  36          
  37          
  38          
  39          
  40          void bspInit()              //硬件初始化
  41          {
  42   1          timer.setClock(&timer);
  43   1      
  44   1          bsp_InitKeyVar();       //按键初始化
  45   1          initLcd1602();          //lcd初始化
  46   1      
  47   1              Timer1Init();
  48   1         // timer0Init();           //中断初始化
  49   1      }
  50          void timer1Init()           //1ms中断初始化
  51          {
  52   1          TMOD |= 0X10;
  53   1      
C51 COMPILER V9.60.0.0   BSP                                                               11/29/2022 09:22:50 PAGE 2   

  54   1          TH1 = 0XD8; 
  55   1          TL1 = 0XF0;
  56   1          ET1 = 1;
  57   1          EA = 1;
  58   1          TR1 = 1;
  59   1      }
  60          //void Timer0Init(void)         //50毫秒@12.000MHz
  61          //{
  62          //      TMOD |= 0X01;
  63          //      TL0 = 0xB0;             //设置定时初值
  64          //      TH0 = 0x3C;             //设置定时初值
  65          //      TF0 = 0;                //清除TF1标志
  66          //      TR0 = 1;                //定时器1开始计时
  67          //}
  68          
  69          
  70          static void task10ms()      //10ms任务
  71          {
  72   1          bsp_KeyScan();
  73   1          evenTrigger(&myevent);
  74   1      }
  75          
  76          static void task500ms() // 5ms任务
  77          {
  78   1              showIncident(&timer);
  79   1      }
  80          
  81          
  82          //void Timer0() interrupt 1   //中断服务函数
  83          //{
  84          //    
  85          //      static char time_num100;    //中断次数，一次10ms
  86          
  87          //    TL0 = 0xB0;
  88          //      TH0 = 0x3C;
  89          //      time_num100++;
  90          //     if (time_num100 == 2)     // 10ms
  91          //     {
  92          //        time_num100 = 0;
  93          //         
  94          //              showIncident(&timer);
  95          
  96          
  97          //     }
  98          
  99          //}
 100          
 101          
 102          void Timer1() interrupt 3   //中断服务函数
 103          {
 104   1              static char time_num500; //中断次数，一次500ms
 105   1              static char time_num10; //中断次数，一次10ms
 106   1      
 107   1              TH1 = 0XD8;
 108   1              TL1 = 0XF0;
 109   1              time_num500++;
 110   1              time_num10++;
 111   1              if (time_num500 == 10) // 10ms
 112   1              {
 113   2                      time_num500 = 0;
 114   2                      task500ms();
 115   2              }
C51 COMPILER V9.60.0.0   BSP                                                               11/29/2022 09:22:50 PAGE 3   

 116   1              if (time_num10 == 1) // 10ms
 117   1              {
 118   2                      time_num10 = 0;
 119   2                      task10ms();
 120   2              }
 121   1      }
 122          
 123          
 124          void mainSetClock(TIMER_T * t)
 125          {
 126   1      
 127   1              ds1302Init(t->timeBuffer);
 128   1      }
 129          
 130          void mainShowClock(TIMER_T * t)//显示正在设置的时间
 131          {
 132   1      
 133   1               unsigned  char buf_s[10]={0};
 134   1               unsigned  char buf_d[10]={0};
 135   1      
 136   1              buf_s[0] = (t->timeBuffer[2]/16)+0x30;                          
 137   1              buf_s[1] = (t->timeBuffer[2]&0x0f)+0x30;                                 
 138   1              buf_s[2] = '-';
 139   1              buf_s[3] = (t->timeBuffer[1]/16)+0x30;                          
 140   1              buf_s[4] = (t->timeBuffer[1]&0x0f)+0x30;        
 141   1              buf_s[5] = '-';
 142   1              buf_s[6] = (t->timeBuffer[0]/16)+0x30;                          
 143   1              buf_s[7] = (t->timeBuffer[0]&0x0f)+0x30;
 144   1      
 145   1              buf_d[0] = (t->timeBuffer[6] / 16) + 0x30; 
 146   1              buf_d[1] = (t->timeBuffer[6] & 0x0f) + 0x30;
 147   1              buf_d[2] = '-';
 148   1              buf_d[3] = (t->timeBuffer[4] / 16) + 0x30; 
 149   1              buf_d[4] = (t->timeBuffer[4] & 0x0f) + 0x30;
 150   1              buf_d[5] = '-';
 151   1              buf_d[6] = (t->timeBuffer[3] / 16) + 0x30; 
 152   1              buf_d[7] = (t->timeBuffer[3] & 0x0f) + 0x30;
 153   1              LcdShowStr(0,0,buf_s); 
 154   1              LcdShowStr(0,1,buf_d); 
 155   1              
 156   1      }
 157          
 158          void mainRefreshClock(TIMER_T * t)//显示时钟芯片的时间
 159          {
 160   1               unsigned  char buffer_1[9]={0};
 161   1               unsigned  char buffer_2[13]={0};
 162   1              
 163   1              dataPros(buffer_1,buffer_2);
 164   1      
 165   1              LcdShowStr(0,0,buffer_1); 
 166   1              LcdShowStr(0,1,buffer_2);   
 167   1      
 168   1      }
*** WARNING C280 IN LINE 158 OF ..\BSP\bsp.c: 't': unreferenced local variable
 169          
 170          void dataPros(uint8_t *buf_s,uint8_t *buf_d)//读取时间并且转换为10进制
 171          {
 172   1              uint8_t datas[8];
 173   1              ds1302ReadTime(datas);
 174   1              buf_s[0] = (datas[2]/16)+0x30;                          //时
 175   1              buf_s[1] = (datas[2]&0x0f)+0x30;                                 
 176   1              buf_s[2] = '-';
C51 COMPILER V9.60.0.0   BSP                                                               11/29/2022 09:22:50 PAGE 4   

 177   1              buf_s[3] = (datas[1]/16)+0x30;                          //分
 178   1              buf_s[4] = (datas[1]&0x0f)+0x30;        
 179   1              buf_s[5] = '-';
 180   1              buf_s[6] = (datas[0]/16)+0x30;                          //秒
 181   1              buf_s[7] = (datas[0]&0x0f)+0x30;
 182   1      
 183   1              buf_d[0] = (datas[6] / 16) + 0x30; //日
 184   1              buf_d[1] = (datas[6] & 0x0f) + 0x30;
 185   1              buf_d[2] = '-';
 186   1              buf_d[3] = (datas[4] / 16) + 0x30; //月
 187   1              buf_d[4] = (datas[4] & 0x0f) + 0x30;
 188   1              buf_d[5] = '-';
 189   1              buf_d[6] = (datas[3] / 16) + 0x30; //年
 190   1              buf_d[7] = (datas[3] & 0x0f) + 0x30;
 191   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    688    ----
   CONSTANT SIZE    =     42    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     48      62
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
