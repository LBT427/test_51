C51 COMPILER V9.60.0.0   BSP_KEY                                                           11/18/2022 02:54:55 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE BSP_KEY
OBJECT MODULE PLACED IN .\Objects\bsp_key.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE ..\BSP\bsp_key\bsp_key.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\BSP;..\BSP\bsp
                    -_key) DEBUG OBJECTEXTEND PRINT(.\Listings\bsp_key.lst) OBJECT(.\Objects\bsp_key.obj)

line level    source

   1          /*
   2           * @Author: liubotao
   3           * @Date: 2022-11-18 00:13:48
   4           * @LastEditors: liubotao
   5           * @LastEditTime: 2022-11-18 02:49:02
   6           * @FilePath: \test51\BSP\bsp_key\bsp_key.c
   7           * @Description: 矩阵按键检测
   8           * 
   9           */
  10          #include "bsp.h"
  11          #define keyboard P1
  12          
  13          #define keyUncertainTime 3//消抖时间 ( x10 ms)
  14          
  15          int KeyValue; //全局函数，键值
  16          
  17          unsigned char code KEY_TABLE[] =
  18           {
  19                   0xEE, 0xED, 0xEB, 0xE7,
  20               0xDE, 0xDD, 0xDB, 0xBB,
  21               0xBE, 0xBD, 0xBB, 0xB7,
  22               0x7E, 0x7D, 0x7B, 0x77
  23           };
  24          
  25          int matrixKeyScan_1()//还没加消抖
  26          {
  27   1              unsigned char num = 0;
  28   1              unsigned int buffer = 0;
  29   1              
  30   1              for (num = 0; num < 4; num++)
  31   1              {
  32   2                      if (num)
  33   2                              buffer = buffer << 4;
  34   2                      keyboard = ~(0x80 >> num);
  35   2                      buffer |= (keyboard & 0x0f);
  36   2              }
  37   1              num = 16;
  38   1              while (num--)
  39   1              {
  40   2                      if (((buffer >> num) & 0x01) == 0)
  41   2                      {
  42   3                              KeyValue = num;
  43   3                              break;
  44   3                      }
  45   2              }
  46   1              return KeyValue;
  47   1      }
  48          /*
  49          检测到按键被按下时，将行扫描的结果存入临时变量，再进行列扫描，得到的结果和临时变量进行或运算。
  50          扫描完得到结果后遍历数组，找到对应的编码位置并显示数码管编码
  51          */
  52          int matrixKeyScan_2()
  53          {
  54   1              static unsigned int keyDelayTime;
C51 COMPILER V9.60.0.0   BSP_KEY                                                           11/18/2022 02:54:55 PAGE 2   

  55   1              unsigned int temp, key, i;
  56   1              keyboard = 0xF0;
  57   1              if (keyboard != 0xF0)
  58   1              {
  59   2                      keyDelayTime++;
  60   2                      if (keyDelayTime > 3)
  61   2                      {
  62   3                              temp = keyboard;
  63   3                              keyboard = 0x0F;
  64   3                              key = temp | keyboard;
  65   3                              for (i = 0; i < 16; ++i)
  66   3                              {
  67   4                                      if (key == KEY_TABLE[i])
  68   4                                              break;
  69   4                              }
  70   3                              KeyValue = i;
  71   3                              return KeyValue;
  72   3                      }
  73   2                      else return -1;
  74   2              }
  75   1              else
  76   1              {
  77   2                      keyDelayTime = 0;
  78   2                      return -1;
  79   2              }
  80   1      }
  81          
  82          int matrixKeyScan_3()
  83          {
  84   1              static unsigned int  keyDelayTime;
  85   1              keyboard=0x0f;
  86   1              if(keyboard!=0x0f)
  87   1              {
  88   2                      keyDelayTime++;
  89   2                      if(keyDelayTime>3)
  90   2                      {       
  91   3                              keyboard=0X0F;
  92   3                              switch(keyboard)
  93   3                              {
  94   4                                      case(0X0E):     KeyValue=0;break; 
  95   4                                      case(0X0D):     KeyValue=1;break; 
  96   4                                      case(0X0B): KeyValue=2;break; 
  97   4                                      case(0X07):     KeyValue=3;break; 
  98   4                              }
  99   3                              keyboard=0XF0;                          
 100   3                              switch(keyboard)
 101   3                              {
 102   4                                      case(0XE0):     KeyValue=KeyValue;break;  
 103   4                                      case(0XD0):     KeyValue=KeyValue+4;break;
 104   4                                      case(0XB0): KeyValue=KeyValue+8;break;
 105   4                                      case(0X70):     KeyValue=KeyValue+12;break;
 106   4                              }               
 107   3                      }
 108   2                      return KeyValue;
 109   2              }
 110   1              else
 111   1              {
 112   2                      keyDelayTime = 0;
 113   2                      return -1;  
 114   2              }
 115   1              
 116   1      }
C51 COMPILER V9.60.0.0   BSP_KEY                                                           11/18/2022 02:54:55 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    315    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
